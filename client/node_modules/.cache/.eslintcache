[{"/Users/milan/ReelsFrontEnd/client/src/index.js":"1","/Users/milan/ReelsFrontEnd/client/src/App.js":"2","/Users/milan/ReelsFrontEnd/client/src/Components/Navbar.jsx":"3","/Users/milan/ReelsFrontEnd/client/src/utility.js":"4","/Users/milan/ReelsFrontEnd/client/src/Components/AuthContextProvider.jsx":"5","/Users/milan/ReelsFrontEnd/client/src/Components/Authentications/Signup.jsx":"6","/Users/milan/ReelsFrontEnd/client/src/Components/Authentications/ResetPassword.jsx":"7","/Users/milan/ReelsFrontEnd/client/src/Components/Authentications/Login.jsx":"8","/Users/milan/ReelsFrontEnd/client/src/Components/Authentications/ForgotPassword.jsx":"9","/Users/milan/ReelsFrontEnd/client/src/Components/Friend/AddFriend.jsx":"10","/Users/milan/ReelsFrontEnd/client/src/Components/Friend/Friends.jsx":"11","/Users/milan/ReelsFrontEnd/client/src/Components/Friend/RecievedFriendRequests.jsx":"12","/Users/milan/ReelsFrontEnd/client/src/Components/Friend/FriendSuggestionUser.jsx":"13","/Users/milan/ReelsFrontEnd/client/src/Components/User/Profile.jsx":"14","/Users/milan/ReelsFrontEnd/client/src/Components/Feed/Feed.jsx":"15","/Users/milan/ReelsFrontEnd/client/src/Components/Feed/Videos.jsx":"16"},{"size":297,"mtime":1682901284199,"results":"17","hashOfConfig":"18"},{"size":1630,"mtime":1683631655745,"results":"19","hashOfConfig":"18"},{"size":3013,"mtime":1683633953767,"results":"20","hashOfConfig":"18"},{"size":189,"mtime":1683837902343,"results":"21","hashOfConfig":"18"},{"size":103,"mtime":1683025949666,"results":"22","hashOfConfig":"18"},{"size":3356,"mtime":1683631538921,"results":"23","hashOfConfig":"18"},{"size":2081,"mtime":1683631545673,"results":"24","hashOfConfig":"18"},{"size":3131,"mtime":1683837486231,"results":"25","hashOfConfig":"18"},{"size":4821,"mtime":1683631562366,"results":"26","hashOfConfig":"18"},{"size":3318,"mtime":1683661248020,"results":"27","hashOfConfig":"18"},{"size":2268,"mtime":1683661191701,"results":"28","hashOfConfig":"18"},{"size":2391,"mtime":1683649094189,"results":"29","hashOfConfig":"18"},{"size":1466,"mtime":1683649196055,"results":"30","hashOfConfig":"18"},{"size":1302,"mtime":1683638905885,"results":"31","hashOfConfig":"18"},{"size":4134,"mtime":1683753147520,"results":"32","hashOfConfig":"18"},{"size":9594,"mtime":1683731614978,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"1seyb5e",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},"/Users/milan/ReelsFrontEnd/client/src/index.js",[],[],[],"/Users/milan/ReelsFrontEnd/client/src/App.js",[],[],"/Users/milan/ReelsFrontEnd/client/src/Components/Navbar.jsx",["88","89","90","91","92"],[],"import React from 'react'\nimport { useContext } from 'react'\nimport Authcontext from './AuthContextProvider';\nimport { Avatar, IconButton } from '@mui/material'\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { useCookies } from 'react-cookie';\nfunction Navbar() {\n    const [showMenu, setShowMenu] = useState(false);\n    const userData = useContext(Authcontext);\n    const history = useNavigate();\n    const [cookie, setCookie, removeCookie] = useCookies(['login']);\n    const handleAvatarClick = () => {\n        setShowMenu(!showMenu);\n    }\n    const handleLogOut = () => {\n        userData.setUser(\"\");\n        localStorage.clear();\n        setShowMenu(!showMenu);\n        removeCookie('login');\n        history('/');\n    }\n    const handleProfileClick = () => {\n        setShowMenu(!showMenu);\n        history('/profile');\n    }\n    return (\n        <div>\n            <div className='flex shadow-lg shadow-grey-800 text-black h-16 justify-center sm:justify-between items-center w-full'>\n                <Link to='/'><img href=\"/\" src=\"https://www.logo.wine/a/logo/Instagram/Instagram-Wordmark-Logo.wine.svg\" className='h-20 w-40 mix-blend-multiply cursor-pointer' /></Link>\n                <div>\n                    {userData.user ?\n                        <ul className='flex'>\n                            <li>\n                                <IconButton href='/feed'>\n                                    <img className='shadow-sm shadow-grey-800 rounded-lg w-10 h-10 cursor-poniter' src=\"https://cdn.iconscout.com/icon/free/png-256/free-instagram-reel-4560268-3789542.png\" />\n                                </IconButton>\n                            </li>\n                            <li>\n                                <IconButton href='/addfriend'>\n                                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c2/Noun_project_-_Add_person.svg/1024px-Noun_project_-_Add_person.svg.png\" className='w-10 h-10 cursor-pointer' />\n                                </IconButton>\n                            </li>\n                            <li>\n                                <Avatar onClick={handleAvatarClick} className='cursor-pointer mt-2' alt={userData.user.data.user.fullName} src={userData.user.data.user.profilepic} />\n                            </li>\n                        </ul>\n                        : <div></div>\n                    }\n                </div>\n            </div>\n            <div className={showMenu ? 'absolute top-15 right-5 height-[100px] width-[50px] shadow-lg shadow-grey-800' : 'hidden'}>\n                <div onClick={handleProfileClick} className='px-5 py-2 text-xl border-b-2 cursor-pointer'>\n                    Profile\n                </div>\n                <div onClick={handleLogOut} className='px-5 py-2 text-xl cursor-pointer'>\n                    Logout\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Navbar","/Users/milan/ReelsFrontEnd/client/src/utility.js",[],[],"/Users/milan/ReelsFrontEnd/client/src/Components/AuthContextProvider.jsx",[],[],"/Users/milan/ReelsFrontEnd/client/src/Components/Authentications/Signup.jsx",["93","94","95"],[],"import { TextField,Button } from '@mui/material'\nimport React from 'react'\nimport {Link} from '@mui/material'\nimport { useState } from 'react';\nimport api from '../../utility';\nimport { Navigate } from 'react-router';\nimport { useNavigate } from \"react-router-dom\";\nimport { useContext } from 'react';\nimport Authcontext from '../AuthContextProvider';\nfunction Signup() {\n    const [name,setName] = useState(\"\");\n    const [email,setEmail] = useState(\"\");\n    const [pass,setPass] = useState(\"\");\n    const [conf,setConf] = useState(\"\");\n    const [profilePic,setProfilePic] = useState(\"\");\n\n    const history = useNavigate();\n    const userData = useContext(Authcontext);\n    const nameChanger = (e) => {\n        setName(e.target.value);\n    }\n    const emailChanger = (e) => {\n        setEmail(e.target.value);\n    }\n    const passChanger = (e) => {\n        setPass(e.target.value);\n    }\n    const confChanger = (e) => {\n        setConf(e.target.value);\n    }\n    const profilePicChanger = (e) => {\n        setProfilePic(e.target.value);\n    }\n    const handleSignUpSubmit = async() => {\n        try {\n            if(pass !== conf) {\n                window.alert(\"Password and Confirm Password Does Not Match\");\n            } else {\n                const res = await api.post('/auth/signup',{\n                    fullName: name,\n                    email: email,\n                    password: pass,\n                    profilepic: \"\"\n                });\n                window.alert(\"Signup SuccessFully\");\n                history(\"/login\");\n            }\n            \n        } catch(err) {\n            window.alert(err.message);\n        }\n    }\n    return (\n        userData.user ? <Navigate to = '/feed'></Navigate> :\n        <div className='flex justify-center items-center w-full h-screen'>\n            <div className='shadow-lg shadow-grey-800 p-5'>\n                <img className=\"w-[300px]\" src=\"https://www.logo.wine/a/logo/Instagram/Instagram-Wordmark-Logo.wine.svg\" alt = \"\"/>\n                <div className='mb-2'>\n                    <TextField value = {name} onChange={nameChanger} variant='outlined' label='Name' sx={{width:300}}></TextField>\n                </div>\n                <div className='mb-2'>\n                    <TextField value = {email} onChange = {emailChanger} variant='outlined' label='Email' type='email' sx={{width:300}}></TextField>\n                </div>\n                <div className='mb-2'>\n                    <TextField value = {pass} onChange = {passChanger} variant='outlined' label='Password' type='password' sx={{width:300}}></TextField>\n                </div>\n                <div className='mb-2'>\n                    <TextField value = {conf} onChange = {confChanger} variant='outlined' label='Confirm Password' type='password' sx={{width:300}}></TextField>\n                </div>\n                <div className='flex justify-between items-center mb-2'>\n                    <Link href='/forgotpassword' sx = {{textDecoration:\"none\"}}>Forgot Password</Link>\n                    <Link href='/login' sx = {{textDecoration:\"none\"}}>Login</Link>\n                </div>\n                <div className='mb-2'>\n                    <Button onClick = {handleSignUpSubmit} variant=\"contained\" sx = {{width:300}}>Signup</Button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Signup","/Users/milan/ReelsFrontEnd/client/src/Components/Authentications/ResetPassword.jsx",[],[],"/Users/milan/ReelsFrontEnd/client/src/Components/Authentications/Login.jsx",[],[],"/Users/milan/ReelsFrontEnd/client/src/Components/Authentications/ForgotPassword.jsx",[],[],"/Users/milan/ReelsFrontEnd/client/src/Components/Friend/AddFriend.jsx",[],[],"/Users/milan/ReelsFrontEnd/client/src/Components/Friend/Friends.jsx",[],[],"/Users/milan/ReelsFrontEnd/client/src/Components/Friend/RecievedFriendRequests.jsx",["96","97"],[],"import React from 'react'\nimport { useState, useEffect } from 'react'\nimport api from '../../utility';\nimport { Avatar,Button } from '@mui/material';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\n\nfunction RecievedFriendRequests(props) {\n    const [isRequestAccepted,setFriendRequestAccepted] = useState(false);\n    const [isFriendRequestRejected,setFriendRequestRejected] = useState(false);\n    const acceptFriendRequest = async () => {\n        try {\n            const res = await api.patch(`friend/accept/${props.request.id}`);\n            setFriendRequestAccepted(true);\n            if(res.status === 200) {\n                window.alert(\"Friend Request Accepted\");\n            } else if(res.status === 500){\n                window.alert(\"Unable to Accept Friend request\");\n                setFriendRequestAccepted(false);\n            }\n        } catch(err) {\n            window.alert(err.message);\n            setFriendRequestAccepted(false);\n        }\n    }\n    const rejectFriendRequest = async () => {\n        try {\n            const res = await api.delete(`friend/reject/${props.request.id}`);\n            setFriendRequestRejected(true);\n            if(res.status === 200) {\n                window.alert(\"Friend Request Rejected\");\n            } else if(res.status === 500) {\n                window.alert(\"Unable to Reject Friend Request\");\n                setFriendRequestRejected(false);\n            }\n        } catch(err) {\n            window.alert(err.message);\n            setFriendRequestRejected(false);\n        }\n    }\n    return (\n        <div className='flex items-center justify-between p-2 border-b-2 border-grey-800'>\n            <div className='flex items-center'>\n                <Avatar className='mr-2'></Avatar>\n                <h1 className='mr-4'>{props.request.fullName}</h1>\n            </div>\n            {isRequestAccepted ? <div>\n                <Button disabled = {true} color = \"success\">Accepted</Button>\n                </div>\n                : isFriendRequestRejected ? <Button color='error' disabled=\"true\">Friend Request Rejected</Button> : <div>\n                <Button onClick={acceptFriendRequest} variant=\"contained\" className='mr-2'>Accept</Button>\n                <Button onClick={rejectFriendRequest} variant=\"contained\" color='error'>Reject</Button>\n            </div>}\n        </div>\n    )\n}\n\nexport default RecievedFriendRequests","/Users/milan/ReelsFrontEnd/client/src/Components/Friend/FriendSuggestionUser.jsx",[],[],"/Users/milan/ReelsFrontEnd/client/src/Components/User/Profile.jsx",[],[],"/Users/milan/ReelsFrontEnd/client/src/Components/Feed/Feed.jsx",["98","99"],[],"import React from 'react'\nimport Videos from './Videos';\nimport './Feed.css'\nimport { useContext } from 'react';\nimport Authcontext from '../AuthContextProvider';\nimport { Navigate } from 'react-router';\nimport { Input } from '@mui/material';\nimport { Button } from '@mui/material'\nimport axios from 'axios';\nimport api from '../../utility'\nimport { useState, useEffect } from 'react';\nimport { CircularProgress } from '@mui/material';\nfunction Feed() {\n    const userData = useContext(Authcontext);\n    const [posts, setPosts] = useState(\"\");\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(undefined);\n    const [uploading,setUploading] = useState(false);\n    const callback = (enteries) => {\n        enteries.forEach(entry => {\n            let ele = entry.target.childNodes[0].childNodes[0].childNodes[0];\n            entry.target.childNodes[0].childNodes[1].setAttribute('class','hidden');\n            console.log(ele);\n            ele.play().then(() => {\n                if (!ele.paused && !entry.isIntersecting) {\n                    ele.currentTime = 0;\n                    ele.pause();\n                }\n            })\n        })\n    }\n    let observer = new IntersectionObserver(callback, { threshold: 0.5 });\n    useEffect(() => {\n        const elements = document.querySelectorAll(\".video\");\n        elements.forEach(element => {\n            observer.observe(element);\n        })\n    });\n    useEffect(() => {\n        setLoading(true);\n        async function fetchData() {\n            const res = await api.get(\"/post/getAllPost\");\n            console.log(res);\n            if (res.status >= 200 && res.status <= 299) {\n                setPosts(res.data.data);\n                setLoading(false);\n            } else if (res.status === 401) {\n                setError(\"There Might Be Some Error While Fetching Data\");\n                setLoading(false);\n            } else if (res.status === 501) {\n                setError(\"Internal Error\");\n                setLoading(false);\n            }\n        }\n        fetchData();\n    }, [])\n    const handleUploadVideo = async (e) => {\n        setUploading(true);\n        try {\n            const file = document.querySelector(\"#video\").files[0];\n            const data = new FormData();\n            data.append(\"video\", file);\n            const res = await api.post(\"/videouplaod\", data, {\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\",\n                },\n                withCredentials: true\n            });\n            if (res.status === 201) {\n                window.alert(\"Added Video\");\n                setUploading(false);\n            } else {\n                window.alert(\"Unable To Add Video\");\n                setUploading(false);\n            }\n        } catch (err) {\n            window.alert(err.message);\n        }\n    }\n    const handleUploadButtonClick = () => {\n        console.log(document.querySelector(\".upload\").childNodes[0]);\n        document.querySelector(\".upload\").childNodes[0].click();\n    }\n    return (\n        userData.user ? <div className='flex flex-col w-full h-full justify-center items-center mt-8'>\n            <div>\n                <form encType=\"multipart/form-data\">\n                    <Input onChange={handleUploadVideo} className = 'upload hidden' type='file' id=\"video\" variant='outlined'></Input>\n                    <Button variant = \"outlined\" className = 'mb-2 w-64 h-12' onClick={handleUploadButtonClick} disabled={uploading}>{!uploading ? \"Upload\" : \"Uploading...\"}</Button>\n                </form>\n            </div>\n            {loading ? <CircularProgress />:\n                posts ? <div className='flex flex-col justify-between items-center videocontainer'>\n                    {posts.map(post => {\n                        return (\n                            <div className='video'>\n                                <Videos post={post}></Videos>\n                            </div>\n                        )\n\n                    })}\n                </div> : <div></div>}\n        </div> : <Navigate to='/login'></Navigate>\n    )\n}\n\nexport default Feed","/Users/milan/ReelsFrontEnd/client/src/Components/Feed/Videos.jsx",["100","101","102","103"],[],"import React from 'react'\nimport ReactDOM from 'react-dom';\nimport { Avatar } from '@mui/material';\nimport Authcontext from '../AuthContextProvider';\nimport { useContext, useState, useEffect } from 'react';\nimport { Button, IconButton, TextField } from '@mui/material'\nimport { InputBase } from '@mui/material';\nimport api from '../../utility';\nfunction Videos(props) {\n    const userData = useContext(Authcontext);\n    const [commentShow, setcommentShow] = useState(false);\n    const [allLikes, setallLikes] = useState([]);\n    const [allComments, setAllComments] = useState([]);\n    const [isUserLiked, setIsUserLiked] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const [countLikes, setCountLikes] = useState(0);\n    const [error, setError] = useState(\"\");\n    const [myComment, setmyComment] = useState(\"\");\n\n    const makeComment = async () => {\n        try {\n            setAllComments([...allComments, {\n                fullName: userData.user.data.user.fullName,\n                email: userData.user.data.user.email,\n                profilepic: userData.user.data.user.profilepic,\n                text: myComment\n            }]);\n            const res = await api.post(`post/comment/createComment/${props.post.id}`, {\n                text: myComment\n            });\n            if (res.status === 200) {\n                console.log(\"Comment Added\");\n                setmyComment(\"\");\n            } else if (res.status === 400) {\n                console.log(\"Unable to Comment\");\n            }\n        } catch (err) {\n            window.alert(err.message);\n        }\n    }\n\n    useEffect(() => {\n        setLoading(true);\n        async function fetchData() {\n            const commentRes = await api.get(`post/comment/getComments/${props.post.id}`);\n            const likeRes = await api.get(`post/likes/allLikes/${props.post.id}`);\n            if (commentRes.status === 200 && likeRes.status === 200) {\n                setallLikes(likeRes.data.likes);\n                setAllComments(commentRes.data.comments);\n                for (let i = 0; i < likeRes.data.likes.length; i++) {\n                    if (likeRes.data.likes[i].id === userData.user.data.user.id) {\n                        setIsUserLiked(true);\n                    }\n                }\n                setCountLikes(likeRes.data.likes.length);\n                setLoading(false);\n            } else if (commentRes.status === 400 || likeRes.status === 400) {\n                setError(\"Unable To Fetch Comments and Likes\");\n                setLoading(false);\n            }\n        }\n        fetchData();\n    }, []);\n    const handleVideoClick = (e) => {\n        e.preventDefault();\n        e.target.muted = !e.target.muted;\n    }\n    const handleScroll = (e) => {\n        let next = ReactDOM.findDOMNode(e.target).parentNode.parentNode.parentNode.nextSibling;\n        console.log(next);\n        if (next) {\n            console.log(\"Ended\");\n            next.scrollIntoView({ behavior: \"smooth\", inline: \"nearest\" });\n            e.target.muted = true;\n        }\n        setcommentShow(false);\n    }\n    const handleLikeClick = async () => {\n        if (!loading) {\n            if (isUserLiked === false) {\n                setIsUserLiked(true);\n                setCountLikes(countLikes + 1);\n                const res = await api.post(`post/likes/dolike/${props.post.id}`);\n                if (res.status === 200) {\n                    console.log(\"Liked Video\");\n                } else if (res.status === 400 || res.status === 500) {\n                    console.log(\"Unable To Like Video\");\n                    setIsUserLiked(false);\n                    setCountLikes(countLikes + 1);\n                }\n            } else {\n                setIsUserLiked(false);\n                setCountLikes(countLikes - 1);\n                const res = await api.post(`post/likes/dontlike/${props.post.id}`);\n                if (res.status === 200) {\n                    console.log(\"Unliked Video\");\n                } else if (res.status === 400) {\n                    console.log(\"Unable To Unlike Video\");\n                    setIsUserLiked(true);\n                    setCountLikes((count) => count + 1);\n                }\n            }\n        }\n    }\n\n    const handleCommentClick = () => {\n        setcommentShow(!commentShow);\n    }\n    return (\n        <div className='flex flex-col justify-center items-center sm:flex-row mb-10'>\n            {props.post ? <div className='flex flex-col items-center justify-center'>\n                <video onEnded={handleScroll} className='w-[100vw] h-[72vh] sm:w-[35vw] sm:h-[72vh] shadow-sm shadow-grey-800' onClick={handleVideoClick} muted autoPlay>\n                    <source src={`https://drive.google.com/uc?export=download&id=${props.post.video_url}`}></source>\n                </video>\n                <div className='w-full shadow-lg shadow-grey-800 px-5 flex justify-between items-center mb-5 h-[50px]'>\n                    <div className='flex'>\n                        <Avatar alt=\"Remy Sharp\" src={props.post.profilepic} />\n                        <span className='h-fit mx-2 text-sky-800 bg-slate-300 p-2'>{props.post.fullName}</span>\n                        <Button>Follow</Button>\n                    </div>\n\n                    {loading ? <div>Loading...</div> : <div className='flex'>\n                        <div onClick={handleLikeClick} className=\"flex mr-5 cursor-pointer\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill={isUserLiked ? ' #0284c7' : 'none'} viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6\">\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6.633 10.5c.806 0 1.533-.446 2.031-1.08a9.041 9.041 0 012.861-2.4c.723-.384 1.35-.956 1.653-1.715a4.498 4.498 0 00.322-1.672V3a.75.75 0 01.75-.75A2.25 2.25 0 0116.5 4.5c0 1.152-.26 2.243-.723 3.218-.266.558.107 1.282.725 1.282h3.126c1.026 0 1.945.694 2.054 1.715.045.422.068.85.068 1.285a11.95 11.95 0 01-2.649 7.521c-.388.482-.987.729-1.605.729H13.48c-.483 0-.964-.078-1.423-.23l-3.114-1.04a4.501 4.501 0 00-1.423-.23H5.904M14.25 9h2.25M5.904 18.75c.083.205.173.405.27.602.197.4-.078.898-.523.898h-.908c-.889 0-1.713-.518-1.972-1.368a12 12 0 01-.521-3.507c0-1.553.295-3.036.831-4.398C3.387 10.203 4.167 9.75 5 9.75h1.053c.472 0 .745.556.5.96a8.958 8.958 0 00-1.302 4.665c0 1.194.232 2.333.654 3.375z\" />\n                            </svg>\n                            <span className='bg-sky-200 text-white text-center h-6 w-6 rounded-full'>{countLikes}</span>\n                        </div>\n                        <div onClick={handleCommentClick} className=\"cursor-pointer\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6\">\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M2.25 12.76c0 1.6 1.123 2.994 2.707 3.227 1.068.157 2.148.279 3.238.364.466.037.893.281 1.153.671L12 21l2.652-3.978c.26-.39.687-.634 1.153-.67 1.09-.086 2.17-.208 3.238-.365 1.584-.233 2.707-1.626 2.707-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0012 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741v6.018z\" />\n                            </svg>\n                        </div>\n                    </div>}\n                </div>\n            </div> : <div>Loading...</div>}\n            <div className={commentShow ? \"overflow-y-scroll z-[100] w-[75vw] h-[40vh] sm:my-[0] mt-[-100%] sm:py-5 sm:w-[25vw] sm:h-[72vh] rounded-lg text-white bg-[#1c1c1b] relative\" : \"hidden\"}>\n                <div className='flex items-center border-b-2 justify-between px-2'>\n                    <h1 className='text-xl font-bold  mb-2 border-white border-b-3'>Comments</h1>\n                    <IconButton onClick={handleCommentClick} className='text-white'><span class=\"material-symbols-outlined cursor-pointer\">\n                        close\n                    </span></IconButton>\n                </div>\n                {loading ? <div>Loading...</div> : allComments ? \n                <div className=''>\n                    {allComments.map(comment => {\n                        return (\n                            <div className='flex py-1 border-b-2 border-gray-400 w-full'>\n                                <div className='px-2'>\n                                    <Avatar src={comment.profilepic}></Avatar>\n                                </div>\n                                <div className=' border-white'>\n                                    <div className='text-sky-700 cursor-pointer'>{comment.fullName}</div>\n                                    <div>{comment.text}</div>\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div> : <div className='px-2'>No Comments To Show</div>\n                }\n                <div class='flex sm:flex-row flex-col px-2 absolute bottom-0'>\n                    <div className='flex'>\n                        <Avatar alt=\"Remy Sharp\" src={userData.user.data.user.profilepic} className='mr-2' />\n                        <InputBase placeholder=\"Comment\" value={myComment} onChange={(e) => setmyComment(e.target.value)} className='border-b-2 mb-2 text-white text-xl w-[200px] border-white' id=\"standard-basic\" label=\"Comment\" variant=\"standard\" />\n                    </div>\n                    <Button onClick={makeComment}>Comment</Button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Videos",{"ruleId":"104","severity":1,"message":"105","line":13,"column":12,"nodeType":"106","messageId":"107","endLine":13,"endColumn":18},{"ruleId":"104","severity":1,"message":"108","line":13,"column":20,"nodeType":"106","messageId":"107","endLine":13,"endColumn":29},{"ruleId":"109","severity":1,"message":"110","line":31,"column":30,"nodeType":"111","endLine":31,"endColumn":180},{"ruleId":"109","severity":1,"message":"110","line":37,"column":37,"nodeType":"111","endLine":37,"endColumn":208},{"ruleId":"109","severity":1,"message":"110","line":42,"column":37,"nodeType":"111","endLine":42,"endColumn":216},{"ruleId":"104","severity":1,"message":"112","line":15,"column":12,"nodeType":"106","messageId":"107","endLine":15,"endColumn":22},{"ruleId":"104","severity":1,"message":"113","line":31,"column":11,"nodeType":"106","messageId":"107","endLine":31,"endColumn":28},{"ruleId":"104","severity":1,"message":"114","line":39,"column":23,"nodeType":"106","messageId":"107","endLine":39,"endColumn":26},{"ruleId":"104","severity":1,"message":"115","line":2,"column":20,"nodeType":"106","messageId":"107","endLine":2,"endColumn":29},{"ruleId":"104","severity":1,"message":"116","line":5,"column":8,"nodeType":"106","messageId":"107","endLine":5,"endColumn":21},{"ruleId":"104","severity":1,"message":"117","line":9,"column":8,"nodeType":"106","messageId":"107","endLine":9,"endColumn":13},{"ruleId":"104","severity":1,"message":"118","line":17,"column":12,"nodeType":"106","messageId":"107","endLine":17,"endColumn":17},{"ruleId":"104","severity":1,"message":"119","line":6,"column":30,"nodeType":"106","messageId":"107","endLine":6,"endColumn":39},{"ruleId":"104","severity":1,"message":"120","line":12,"column":12,"nodeType":"106","messageId":"107","endLine":12,"endColumn":20},{"ruleId":"104","severity":1,"message":"118","line":17,"column":12,"nodeType":"106","messageId":"107","endLine":17,"endColumn":17},{"ruleId":"121","severity":1,"message":"122","line":63,"column":8,"nodeType":"123","endLine":63,"endColumn":10,"suggestions":"124"},"no-unused-vars","'cookie' is assigned a value but never used.","Identifier","unusedVar","'setCookie' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'profilePic' is assigned a value but never used.","'profilePicChanger' is assigned a value but never used.","'res' is assigned a value but never used.","'useEffect' is defined but never used.","'PersonAddIcon' is defined but never used.","'axios' is defined but never used.","'error' is assigned a value but never used.","'TextField' is defined but never used.","'allLikes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.post.id' and 'userData.user.data.user.id'. Either include them or remove the dependency array.","ArrayExpression",["125"],{"desc":"126","fix":"127"},"Update the dependencies array to be: [props.post.id, userData.user.data.user.id]",{"range":"128","text":"129"},[2606,2608],"[props.post.id, userData.user.data.user.id]"]